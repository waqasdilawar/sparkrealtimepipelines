services:
  broker:
    image: apache/kafka-native:latest
    container_name: broker
    ports:
      - 9092:9092
    networks:
      - spark-services-network
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      # One socket for containers (INTERNAL), one for the host (EXTERNAL)
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:29092,EXTERNAL://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://broker:29092,EXTERNAL://localhost:9092
      # Map listener names to protocol
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT
      # Inter-broker traffic should use the INTERNAL listener
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL

      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3

  spark-master:
    image: apache/spark:4.0.0-scala2.13-java21-python3-r-ubuntu
    hostname: spark-master
    environment:
      - SPARK_MODE=master
    ports:
      - "8080:8080"
      - "7077:7077"
    command: ["/opt/spark/bin/spark-class", "org.apache.spark.deploy.master.Master"]
    volumes:
      - ./artifacts:/artifacts
    networks:
      - spark-services-network

  spark-worker:
    image: apache/spark:4.0.0-scala2.13-java21-python3-r-ubuntu
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
    ports:
      - "8081:8081"
    command: ["/opt/spark/bin/spark-class", "org.apache.spark.deploy.worker.Worker", "spark://spark-master:7077"]
    depends_on:
      - spark-master
    networks:
      - spark-services-network
networks:
  spark-services-network:
    external: false